# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def maxDepth(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        # solution 1:
        #maxl=[0], error when using maxl=0, can only use list
        #def dfs(node, level):
        #    if node==None:
        #        return
        #    if level>maxl[0]:
        #        maxl[0]=level
                
        #    dfs(node.left,level+1)
        #    dfs(node.right,level+1)
        
        #dfs(root,1)
        #return maxl[-1]
    
        def dfs(node):
            if node==None:
                return 0
            
            return 1+ max(dfs(node.left), dfs(node.right))
        
        return dfs(root)
