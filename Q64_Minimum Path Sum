class Solution(object):
    def minPathSum(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        m=len(grid)
        n=len(grid[0])
        arr=grid
        # the smallest previous path only comes from the minimal value of left or up, then plus current cell
        for i in range(m):
            for j in range(n):
                if j==0:
                    if i==0:
                        arr[i][j]=grid[i][j]
                    else:
                        arr[i][j]=arr[i-1][j]+grid[i][j]
                else:
                    if i==0:
                        arr[i][j]=arr[i][j-1]+grid[i][j]
                    else:
                        arr[i][j]=min(arr[i-1][j],arr[i][j-1])+grid[i][j]

        return arr[m-1][n-1]
